#!/usr/bin/env python

"""kb

View and manage knowledge base resources on the command line. kb recognizes
3 types of resources: examples, notes, and other. The path to examples
is set with the environment variable KB_EX_PATH, and commands like search and list
default to the examples path. To expand these command to more paths, pass a flag
for notes only or all resources. The root path for all resources is set with the
environment variable KB_PATH.

Usage:
  kb <resource>
  kb -e <resource>
  kb -c <resource>
  kb -x <resource>
  kb -l [-a] [-n] [-w]
  kb -d [-a] [-n] [-w]
  kb -s <keyword> [-a] [-n] [-w]
  kb -f
  kb -v
  kb -h

Options:
  -e --edit         Edit example resource; searches for resource by file name in
                    KB_EX_PATH first, then searches for resource by full path in KB_PATH
  -c --create       Create example resource in KB_EX_PATH
  -x --delete       Delete example resource in KB_EX_PATH

  -d --directories  List KB_EX_PATH by default; may be used with -a and -n
  -l --list         List resources in KB_EX_PATH by default; may be used with -a and -n
  -s --search       Search for <keyword> in KB_EX_PATH by default; may be used with -a and -n

  -a --all          Apply action to all resources
  -n --notes        Apply action to plain text notes only (.md or .txt files)
  -w --web          Include resources fetched from web

  -f --fetch        Fetch and build example resources from the web in KB_EX_PATH/_web
  -v --version      Print version
  -h --help         Print help

Examples:

  To view the examples for `tar`:
    kb tar

  To list all available examples:
    kb -l

  To list all available notes:
    kb -l -n

  To list all available resources:
    kb -l -a

  To search for "ssh" among all examples:
    kb -s ssh

  To search for "ssh" among all resources:
    kb -s -a ssh

  To create the `bar` example resource:
    kb -c bar

  To edit the `bar` example resource:
    kb -e bar

  To delete the `bar` example resource:
    kb -x bar

  To edit the `foo` note (text files only, full path required with -n option):
    kb -e /path/to/foo/note -n

  To fetch and build example resources from the web:
    kb -f

"""

import os
import pydoc
import subprocess

from docopt import docopt

from kb.resources import (die, note_dirs, kb_dirs, ex_dir, list_resources, search,
                          colorize, edit, create, delete, fetch, read)


def print_or_page(text):
    """Prints all text or pages text depending on size of terminal"""
    term_height = int(subprocess.run(['tput', 'lines'], stdout=subprocess.PIPE).stdout)
    if len(text.splitlines()) > term_height - 5:
        pydoc.pager(text)
    else:
        print(text)


if __name__ == '__main__':
    # parse the command-line options
    options = docopt(__doc__, version='kb 1.0.0')

    # list directories
    if options['--directories']:

        # validation
        if options['--notes'] and (options['--all'] or options['--web']):
            die('--notes option not possible with --all and/or --web')

        # list notes directories
        if options['--notes']:
            print_or_page("\n".join(sorted(note_dirs(pretty_print=True))))
        # list all directories resources
        elif options['--all']:
            dirs = sorted(kb_dirs(pretty_print=True))
            if not options['--web']:
                ex_path = ex_dir().pop()
                web_ex_path = os.path.join(ex_path, '.web')
                dirs.remove(web_ex_path)
            print_or_page("\n".join(dirs))
        # list examples directory (default)
        else:
            if options['--web']:
                ex_path = ex_dir().pop()
                web_ex_path = os.path.join(ex_path, '.web/')
                dirs = list(ex_dir(pretty_print=True))
                dirs.append(web_ex_path)
                print_or_page("\n".join(sorted(dirs)))
            else:
                print_or_page("\n".join(sorted(ex_dir(pretty_print=True))))

    # list resources
    elif options['--list']:

        # validation
        if options['--notes'] and (options['--all'] or options['--web']):
            die('--notes option not possible with --all and/or --web')

        # list notes
        if options['--notes']:
            print_or_page(list_resources('notes', pretty_print=True))
        # list all resources
        elif options['--all']:
            print_or_page(list_resources('all', pretty_print=True, include_web=options['--web']))
        # list examples (default)
        else:
            print_or_page(list_resources(pretty_print=True, include_web=options['--web']))

    elif options['--search']:

        # validation
        if options['--notes'] and (options['--all'] or options['--web']):
            die('--notes option not possible with --all and/or --web')

        # search notes
        if options['--notes']:
            results = search(options['<keyword>'], scope='notes', include_web=options['--web'])
            if results:
                print_or_page(colorize(results, options['<keyword>']))
            else:
                die(f"{options['<keyword>']} not found")
        # search all resources
        elif options['--all']:
            results = search(options['<keyword>'], scope='all', include_web=options['--web'])
            if results:
                print_or_page(colorize(results, options['<keyword>']))
            else:
                die(f"{options['<keyword>']} not found")
        # search examples (default)
        else:
            results = search(options['<keyword>'], scope='examples', include_web=options['--web'])
            if results:
                print_or_page(colorize(results, options['<keyword>']))
            else:
                die(f"{options['<keyword>']} not found")

    # edit resource
    elif options['--edit']:
        edit(options['<resource>'], notes=options['--notes'])

    # create example resource
    elif options['--create']:
        create(options['<resource>'])

    # delete example resource
    elif options['--delete']:
        delete(options['<resource>'])

    # fetch and build example resources from the web
    elif options['--fetch']:
        print_or_page(fetch())

    # show the resource
    else:
        resource = read(options['<resource>'])
        if resource is None:
            die('☹️  Resource not found')
        colorized = colorize(resource, options['<resource>'])
        print_or_page(colorized)
