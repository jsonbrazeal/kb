#!/usr/bin/env python

"""kb

View, edit, and create knowledge base resources on the command line. kb recognizes
3 types of resources: examples, notes, and other resources. The path to examples
is set with the environment variable KB_EX_PATH, and commands like search and list
default to the examples path. To expand these command to more paths, pass a flag
for notes or all resources. The root path for all resources is set with the
environment variable KB_PATH.

Usage:
  kb <resource>
  kb -e <resource>
  kb -c <resource>
  kb -x <resource>
  kb -s <keyword> [-a] [-n]
  kb -l [-a] [-n]
  kb -d [-a] [-n]
  kb -v

Options:
  -a --all          Apply action to all resources
  -n --notes        Apply action to plain text notes only (.md or .txt files)
  -d --directories  List KB_EX_PATH by default, may be used with -a and -n
  -e --edit         Edit resource (full path required except for examples)
  -c --create       Create example resource in KB_EX_PATH
  -x --delete       Delete example resource in KB_EX_PATH
  -l --list         List resources
  -s --search       Search for <keyword> in KB_EX_PATH by default, may be used with -a and -n
  -v --version      Print the version number

Examples:

  To view the examples for `tar`:
    kb tar

  To list all available examples:
    kb -l

  To list all available notes:
    kb -l -n

  To list all available resources:
    kb -l -a

  To search for "ssh" among all examples:
    kb -s ssh

  To search for "ssh" among all resources:
    kb -s -a ssh

  To edit the `foo` resource:
    kb -e /path/to/foo

  To create the `bar` example resource:
    kb -c bar

  To delete the `bar` example resource:
    kb -x bar
"""

# require the dependencies
from kb import resources
from docopt import docopt


if __name__ == '__main__':
    # parse the command-line options
    options = docopt(__doc__, version='kb 1.0.0')

    # list directories
    if options['--directories']:
        # list notes directories
        if options['--notes']:
            print("\n".join(sorted(resources.note_dirs(pretty_print=True))))
        # list all directories resources
        elif options['--all']:
            print("\n".join(sorted(resources.kb_dirs(pretty_print=True))))
        # list examples directory (default)
        else:
            print("\n".join(sorted(resources.ex_dir(pretty_print=True))))

    # list resources
    elif options['--list']:
        # list notes
        if options['--notes']:
            print(resources.list_resources('notes', pretty_print=True))
        # list all resources
        elif options['--all']:
            print(resources.list_resources('all', pretty_print=True))
        # list examples (default)
        else:
            print(resources.list_resources(pretty_print=True))

    elif options['--search']:
        # search notes
        if options['--notes']:
            results = resources.search(options['<keyword>'], 'notes')
            if results:
                print(resources.colorize(results, options['<keyword>']))
            else:
                print(f"{options['<keyword>']} not found")
        # search all resources
        elif options['--all']:
            results = resources.search(options['<keyword>'], 'all')
            if results:
                print(resources.colorize(results, options['<keyword>']))
            else:
                print(f"{options['<keyword>']} not found")
        # search examples (default)
        else:
            results = resources.search(options['<keyword>'])
            if results:
                print(resources.colorize(results, options['<keyword>']))
            else:
                print(f"{options['<keyword>']} not found")

    # edit resource
    elif options['--edit']:
        resources.edit(options['<resource>'])

    # create example resource
    elif options['--create']:
        resources.create(options['<resource>'])

    # delete example resource
    elif options['--delete']:
        resources.delete(options['<resource>'])

    # show the resource
    else:
        resource = resources.read(options['<resource>'])
        if resource is None:
            print('☹️  Resource not found')
        else:
            print(resources.colorize(resource, options['<resource>']))
